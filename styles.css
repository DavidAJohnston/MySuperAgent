document.addEventListener('DOMContentLoaded', () => {
    const startOnboardingBtn = document.getElementById('startOnboarding');
    const onboardingModal = document.getElementById('onboardingModal');
    const closeModal = document.querySelector('.close');
    const learnMoreBtn = document.getElementById('learnMore');
    const nextStep1Btn = document.getElementById('nextStep1');
    const userForm = document.getElementById('userForm');
    const connectWalletBtn = document.getElementById('connectWallet');
    const stakeTokensBtn = document.getElementById('stakeTokens');
    const depositMorBtn = document.getElementById('depositMor');
    const depositMoreMorBtn = document.getElementById('depositMoreMor');
    const exploreDashboardBtn = document.getElementById('exploreDashboard');
    const progress = document.getElementById('progress');
    const superAgentAvatar = document.querySelector('.super-agent-avatar');
    const brainPowerElements = document.querySelectorAll('#brainPower, #dashboardBrainPower, #dashboardBrainPowerLive');
    const morDeposit = document.getElementById('morDeposit');
    const morDepositDashboard = document.getElementById('morDepositDashboard');
    let currentStep = 1;
    let totalMor = 0;
    let earnings = 0;

    // Show onboarding modal and Super Agent avatar
    startOnboardingBtn.addEventListener('click', () => {
        onboardingModal.style.display = 'block';
        superAgentAvatar.style.display = 'block'; // Show avatar in onboarding
        updateProgress();
    });

    // Close modal
    closeModal.addEventListener('click', () => {
        onboardingModal.style.display = 'none';
        resetOnboarding();
    });

    // Learn more link to X post
    learnMoreBtn.addEventListener('click', () => {
        window.open('https://x.com/DJohnstonEC/status/1887195295983051190', '_blank');
    });

    // Navigate to next step
    nextStep1Btn.addEventListener('click', () => {
        showStep(2);
    });

    // Handle user form submission
    userForm.addEventListener('submit', (e) => {
        e.preventDefault();
        showStep(3);
    });

    // Simulate wallet connection
    connectWalletBtn.addEventListener('click', () => {
        alert('Connecting to Web3 wallet... (Simulated)');
        showStep(4);
    });

    // Handle MOR deposit for Brain Power
    depositMorBtn.addEventListener('click', () => {
        const morAmount = parseFloat(morDeposit.value) || 0;
        if (morAmount > 0) {
            totalMor += morAmount;
            updateBrainPower();
            morDeposit.value = ''; // Clear input
        }
    });

    depositMoreMorBtn.addEventListener('click', () => {
        const morAmount = parseFloat(morDepositDashboard.value) || 0;
        if (morAmount > 0) {
            totalMor += morAmount;
            updateBrainPower();
            morDepositDashboard.value = ''; // Clear input
        }
    });

    // Simulate staking tokens/next step
    stakeTokensBtn.addEventListener('click', () => {
        showStep(5);
    });

    // Show dashboard and center Super Agent image with orange border
    exploreDashboardBtn.addEventListener('click', () => {
        onboardingModal.style.display = 'none';
        document.getElementById('dashboard').style.display = 'block';
        // Ensure the avatar in the dashboard has the orange border
        const dashboardAvatar = document.querySelector('.dashboard .super-agent-avatar');
        dashboardAvatar.classList.add('completed');
    });

    // Function to show specific step
    function showStep(step) {
        const steps = document.querySelectorAll('.step');
        steps.forEach(s => s.style.display = 'none');
        document.querySelector(`.step[data-step="${step}"]`).style.display = 'block';
        currentStep = step;
        updateProgress();
    }

    // Update progress bar
    function updateProgress() {
        const progressPercentage = (currentStep / 5) * 100;
        progress.style.width = `${progressPercentage}%`;
    }

    // Reset onboarding
    function resetOnboarding() {
        currentStep = 1;
        showStep(1);
        progress.style.width = '0%';
        superAgentAvatar.style.display = 'none';
        totalMor = 0;
        earnings = 0;
        updateBrainPower();
        updateEarnings();
    }

    // Update Brain Power based on MOR (1 MOR = 0.1 Brain Power)
    function updateBrainPower() {
        const brainPower = totalMor * 0.1; // 1 MOR = 0.1 Brain Power
        brainPowerElements.forEach(el => el.textContent = `${brainPower.toFixed(1)} BP`);
        const progressBar = document.querySelector('.progress');
        const maxBrainPower = 1000; // Arbitrary max for demo
        const progressWidth = (brainPower / maxBrainPower) * 100;
        progressBar.style.width = `${Math.min(progressWidth, 100)}%`;
    }

    // Simulate earnings counter (updates every 5 seconds)
    const earningsCounter = document.getElementById('earningsCounter');
    function updateEarnings() {
        earnings += Math.floor(Math.random() * 10) / 100; // Random increase (e.g., $0.01 to $0.09)
        earningsCounter.textContent = earnings.toFixed(2);
    }
    setInterval(updateEarnings, 5000); // Update every 5 seconds
    updateEarnings(); // Initial update

    // Initial Brain Power update
    updateBrainPower();
});
